services:
  ## MySQL Docker Compose Config
  postgres-order:
    container_name: postgres-order
    image: postgres
    environment:
      POSTGRES_DB: order-service
      POSTGRES_USER: ptechie
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./postgres-order:/data/postgres
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: unless-stopped

  postgres-inventory:
    container_name: postgres-inventory
    image: postgres
    environment:
      POSTGRES_DB: inventory-service
      POSTGRES_USER: ptechie
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./postgres-inventory:/data/postgres
    ports:
      - "5432:5432"
    restart: always

  ## Mongo Docker Compose Config
  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    restart: always
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db

  ## Keycloak Config with Mysql database
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:5.7
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    command: start-dev
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
      - ./keycloak_data:/opt/keycloak/data
    depends_on:
      - keycloak-mysql

  ## Eureka Server
  discovery-server:
    image: majdissa34/discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_USERNAME=eureka
      - EUREKA_PASSWORD=Mi.10452km2

  api-gateway:
    image: majdissa34/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - EUREKA_USERNAME=eureka
      - EUREKA_PASSWORD=Mi.10452km2
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - discovery-server
      - keycloak

  ## Product-Service Docker Compose Config
  product-service:
    container_name: product-service
    image: majdissa34/product-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGO_URI=mongodb+srv://majd34:GJK*Bqh4Uff9tE-@product.3lvt3ij.mongodb.net/?retryWrites=true&w=majority&appName=Product
      - EUREKA_USERNAME=eureka
      - EUREKA_PASSWORD=Mi.10452km2
    depends_on:
      - mongo
      - discovery-server
      - api-gateway

  ## Order-Service Docker Compose Config
  order-service:
    container_name: order-service
    image: majdissa34/order-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_URL=jdbc:postgresql://postgres-order:5431/order-service
      - DB_USER=ptechie
      - DB_PASS=password
      - EUREKA_USERNAME=eureka
      - EUREKA_PASSWORD=Mi.10452km2
      - INVENTORY_SERVICE_URL=http://inventory-service
    depends_on:
      - postgres-order
      - discovery-server
      - api-gateway

  ## Inventory-Service Docker Compose Config
  inventory-service:
    container_name: inventory-service
    image: majdissa34/inventory-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_URL=jdbc:postgresql://postgres-inventory:5432/inventory-service
      - DB_USER=ptechie
      - DB_PASS=password
      - EUREKA_USERNAME=eureka
      - EUREKA_PASSWORD=Mi.10452km2
    depends_on:
      - postgres-inventory
      - discovery-server
      - api-gateway

